{
  "_args": [
    [
      {
        "raw": "colour@~0.7.1",
        "scope": null,
        "escapedName": "colour",
        "name": "colour",
        "rawSpec": "~0.7.1",
        "spec": ">=0.7.1 <0.8.0",
        "type": "range"
      },
      "C:\\Go\\src\\github.com\\car-lease-demo\\node_modules\\ascli"
    ]
  ],
  "_from": "colour@>=0.7.1 <0.8.0",
  "_id": "colour@0.7.1",
  "_inCache": true,
  "_location": "/colour",
  "_npmUser": {
    "name": "dcode",
    "email": "dcode@dcode.io"
  },
  "_npmVersion": "1.2.18",
  "_phantomChildren": {},
  "_requested": {
    "raw": "colour@~0.7.1",
    "scope": null,
    "escapedName": "colour",
    "name": "colour",
    "rawSpec": "~0.7.1",
    "spec": ">=0.7.1 <0.8.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ascli"
  ],
  "_resolved": "https://registry.npmjs.org/colour/-/colour-0.7.1.tgz",
  "_shasum": "9cb169917ec5d12c0736d3e8685746df1cadf778",
  "_shrinkwrap": null,
  "_spec": "colour@~0.7.1",
  "_where": "C:\\Go\\src\\github.com\\car-lease-demo\\node_modules\\ascli",
  "author": {
    "name": "Daniel Wirtz",
    "email": "dcode@dcode.io"
  },
  "bugs": {
    "url": "https://github.com/dcodeIO/colour.js/issues"
  },
  "dependencies": {},
  "description": "A cored, fixed, documented and optimized version of the popular `colors.js`: Get colors in your node.js console like what...",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "9cb169917ec5d12c0736d3e8685746df1cadf778",
    "tarball": "https://registry.npmjs.org/colour/-/colour-0.7.1.tgz"
  },
  "engines": {
    "node": ">=0.8"
  },
  "homepage": "https://github.com/dcodeIO/colour.js#readme",
  "keywords": [
    "ansi",
    "terminal",
    "colors"
  ],
  "license": "MIT",
  "main": "./colour.min.js",
  "maintainers": [
    {
      "name": "dcode",
      "email": "dcode@dcode.io"
    }
  ],
  "name": "colour",
  "optionalDependencies": {},
  "readme": "![colour.js - ANSI terminal colors](https://raw.github.com/dcodeIO/colour.js/master/colour.png)\r\n===========\r\nA cored, fixed, documented and optimized version of the popular [colors.js](https://github.com/Marak/colors.js). Can be\r\nused as a drop-in replacement, also works correctly in the browser, provides a CSS mode and has been compiled through\r\nClosure Compiler using advanced optimizations. Additionally, nearly every issue and pull request on the original has\r\nbeen incorporated.\r\n\r\nInstallation\r\n------------\r\n`npm install colour`\r\n\r\nUsage\r\n-----\r\nThis package extends the global String prototype with additional getters that apply terminal colors to your texts.\r\nAvailable styles are:\r\n\r\n* **Emphasis:** bold, italic, underline, inverse\r\n* **Colors:** yellow, cyan, white, magenta, green, red, grey, blue\r\n* **Sequencers:** rainbow, zebra, random\r\n\r\n#### Example\r\n\r\n```js\r\nvar colour = require('colour');\r\nconsole.log('hello'.green); // outputs green text\r\nconsole.log('i like cake and pies'.underline.red) // outputs red underlined text\r\nconsole.log('inverse the color'.inverse); // inverses the color\r\nconsole.log('OMG Rainbows!'.rainbow); // rainbow (ignores spaces)\r\n```\r\n\r\n#### Or: As a drop-in replacement for `colors`\r\n```js\r\nvar /* just name it */ colors = require('colour');\r\n...\r\n```\r\n\r\nCustom themes\r\n-------------\r\nIts also possible to define your own themes by creating new getters on the String object. Example:\r\n\r\n```js\r\nvar colour = require('colour');\r\ncolour.setTheme({\r\n  silly: 'rainbow',\r\n  input: 'grey',\r\n  verbose: 'cyan',\r\n  prompt: 'grey',\r\n  info: 'green',\r\n  data: 'grey',\r\n  help: 'cyan',\r\n  warn: ['yellow', 'underline'], // Applies two styles at once\r\n  debug: 'blue',\r\n  error: 'red bold' // Again, two styles\r\n});\r\n\r\nconsole.log(\"this is an error\".error); // outputs bold red text\r\nconsole.log(\"this is a warning\".warn); // outputs underlined yellow text\r\n\r\nconsole.log(colour.green(\"this is green\")); // Alternatively\r\n```\r\n\r\nConsole, browser and browser-css mode\r\n-------------------------------------\r\n```js\r\nvar colour = require('colour');\r\n...\r\ncolour.mode = 'none'; // No colors at all\r\ncolour.mode = 'console'; // Adds terminal colors (default on node.js)\r\ncolour.mode = 'browser'; // Adds HTML colors (default in browsers)\r\ncolour.mode = 'browser-css'; // Adds special CSS (see examples/example.css)\r\n```\r\n\r\nUninstalling / reinstalling on the global scope\r\n-----------------------------------------------\r\nIf you have a reason to use a fresh String prototype in your application, you may also revert all extensions made.\r\n\r\n```js\r\nvar colour = require('colour');\r\n...\r\ncolour.uninstall(); // Removes all custom properties from the String prototype\r\n...\r\ncolour.install(); // Re-installs them\r\n...\r\n```\r\n\r\nMore features\r\n-------------\r\n* node.js/CommonJS compatible\r\n* RequireJS/AMD compatible\r\n* Browser/shim compatible\r\n* Closure Compiler [externs included](https://github.com/dcodeIO/colour.js/blob/master/externs/colour.js)\r\n* Zero dependencies\r\n\r\nCredits\r\n-------\r\nBased on work started by Marak (Marak Squires), cloudhead (Alexis Sellier), mmalecki (Maciej MaÅ‚ecki), nicoreed (Nico\r\nReed), morganrallen (Morgan Allen), JustinCampbell (Justin Campbell) and ded (Dustin Diaz).\r\n\r\nLicense\r\n-------\r\nThe MIT-License (MIT)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dcodeIO/colour.js.git"
  },
  "scripts": {
    "compile": "ccjs colour.js --warning_level=VERBOSE --compilation_level=ADVANCED_OPTIMIZATIONS --externs=externs > colour.min.js",
    "test": "node tests/test.js"
  },
  "version": "0.7.1"
}
