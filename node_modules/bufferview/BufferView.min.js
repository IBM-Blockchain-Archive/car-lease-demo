/*
 BufferView (c) 2013 Daniel Wirtz <dcode@dcode.io>
 Released under the Apache License, Version 2.0
 see: https://github.com/dcodeIO/BufferView for details
*/
module.exports=function(){var d=require("buffer").Buffer,b=function(a,c,b,d){c=c||0;b=b||a.length;this.buffer=0===c&&b===a.length?a:a.slice(c||0,b||a.length);this.noAssert=!!d};b.create=function(a,c,e){return d&&d.isBuffer(a)?new b(a,c,e):new DataView(a,c,e)};b.isBufferView=function(a){return a&&a instanceof b};b.isDataView=function(a){return a&&a instanceof DataView&&!(a instanceof b)};b.prototype=Object.create(DataView.prototype);(function(){for(var a in b.prototype)delete b.prototype[a]})();b.prototype.getUint8=
function(a){return this.buffer.readUInt8(a,this.noAssert)};b.prototype.setUint8=function(a,c){if(!this.noAssert&&(0>a||a>=this.buffer.length))throw Error("Offset out of bounds: "+a);this.buffer.writeUInt8(c,a,!0)};b.prototype.getInt8=function(a){return this.buffer.readInt8(a,this.noAssert)};b.prototype.setInt8=function(a,c){if(!this.noAssert&&(0>a||a>=this.buffer.length))throw Error("Offset out of bounds: "+a);this.buffer.writeInt8(c,a,!0)};b.prototype.getUint16=function(a,c){return c?this.buffer.readUInt16LE(a,
this.noAssert):this.buffer.readUInt16BE(a,this.noAssert)};b.prototype.setUint16=function(a,c,b){if(!this.noAssert&&(0>a||a+2>this.buffer.length))throw Error("Offset out of bounds: "+a);b?this.buffer.writeUInt16LE(c,a,!0):this.buffer.writeUInt16BE(c,a,!0)};b.prototype.getInt16=function(a,c){return c?this.buffer.readInt16LE(a,this.noAssert):this.buffer.readInt16BE(a,this.noAssert)};b.prototype.setInt16=function(a,c,b){if(!this.noAssert&&(0>a||a+2>this.buffer.length))throw Error("Offset out of bounds: "+
a);b?this.buffer.writeInt16LE(c,a,!0):this.buffer.writeInt16BE(c,a,!0)};b.prototype.getUint32=function(a,c){return c?this.buffer.readUInt32LE(a,this.noAssert):this.buffer.readUInt32BE(a,this.noAssert)};b.prototype.setUint32=function(a,c,b){if(!this.noAssert&&(0>a||a+4>this.buffer.length))throw Error("Offset out of bounds: "+a);b?this.buffer.writeUInt32LE(c,a,!0):this.buffer.writeUInt32BE(c,a,!0)};b.prototype.getInt32=function(a,c){return c?this.buffer.readInt32LE(a,this.noAssert):this.buffer.readInt32BE(a,
this.noAssert)};b.prototype.setInt32=function(a,c,b){if(!this.noAssert&&(0>a||a+4>this.buffer.length))throw Error("Offset out of bounds: "+a);b?this.buffer.writeInt32LE(c,a,!0):this.buffer.writeInt32BE(c,a,!0)};b.prototype.getFloat32=function(a,c){return c?this.buffer.readFloatLE(a,this.noAssert):this.buffer.readFloatBE(a,this.noAssert)};b.prototype.setFloat32=function(a,c,b){if(!this.noAssert&&(0>a||a+4>this.buffer.length))throw Error("Offset out of bounds: "+a);b?this.buffer.writeFloatLE(c,a,!0):
this.buffer.writeFloatBE(c,a,!0)};b.prototype.getFloat64=function(a,b){return b?this.buffer.readDoubleLE(a,this.noAssert):this.buffer.readDoubleBE(a,this.noAssert)};b.prototype.setFloat64=function(a,b,d){if(!this.noAssert&&(0>a||a+8>this.buffer.length))throw Error("Offset out of bounds: "+a);d?this.buffer.writeDoubleLE(b,a,!0):this.buffer.writeDoubleBE(b,a,!0)};return b}();
